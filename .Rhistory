3.08, 4.08, 4.43, 3.77, 4.22, 3.62, 3.54, 4.11), wt = c(2.62, 2.875, 2.32,
3.215, 3.44, 3.46, 3.57, 3.19, 3.15, 3.44, 3.44, 4.07, 3.73, 3.78, 5.25,
5.424, 5.345, 2.2, 1.615, 1.835, 2.465, 3.52, 3.435, 3.84, 3.845, 1.935,
2.14, 1.513, 3.17, 2.77, 3.57, 2.78), qsec = c(16.46, 17.02, 18.61, 19.44,
17.02, 20.22, 15.84, 20, 22.9, 18.3, 18.9, 17.4, 17.6, 18, 17.98, 17.82,
17.42, 19.47, 18.52, 19.9, 20.01, 16.87, 17.3, 15.41, 17.05, 18.9, 16.7,
16.9, 14.5, 15.5, 14.6, 18.6), vs = c(0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1,
0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1), am = c(1,
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
1, 1, 1, 1, 1, 1, 1), gear = c(4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3,
3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 5, 4), carb = c(4, 4, 1,
1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2, 2, 4, 2, 1, 2,
2, 4, 6, 8, 2)), row.names = c("Mazda RX4", "Mazda RX4 Wag", "Datsun 710",
"Hornet 4 Drive", "Hornet Sportabout", "Valiant", "Duster 360", "Merc 240D",
"Merc 230", "Merc 280", "Merc 280C", "Merc 450SE", "Merc 450SL", "Merc 450SLC",
"Cadillac Fleetwood", "Lincoln Continental", "Chrysler Imperial", "Fiat 128",
"Honda Civic", "Toyota Corolla", "Toyota Corona", "Dodge Challenger",
"AMC Javelin", "Camaro Z28", "Pontiac Firebird", "Fiat X1-9", "Porsche 914-2",
"Lotus Europa", "Ford Pantera L", "Ferrari Dino", "Maserati Bora",
"Volvo 142E"), class = "data.frame")
View(mtcars)
View(mtcars)
lm3<-lm(mpg~weight, data=mtcars)
lm3<-lm(mpg~wt, data=mtcars)
summary(lm3)
m <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(m)
n<-(m/mean(m))
n
mean(n)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm4<-lm(y~x)
summary(lm4)
g<-c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
h<-g
lm5<-lm(g~0+h)
summary(lm5)
lm5<-lm(g~h)
summary(lm5)
cor(h,g)
summary(cor(h,g))
mean(g)
version
?datasets
library(datasets)
data()
data(mtcars)
data("mtcars")
?data()
data(datasets.mtcars)
data("datasets.mtcars")
data(datasets, "mtcars")
help(datasets)
data("mtcars")
data('mtcars')
data(mtcars)
data(euro)
data(infert)
?data()
data(mtcars, package=datasets)
data(mtcars, package='datasets')
data(mtcars, package='datasets')
data(mtcars, package="datasets")
require(utils)
data(mtcars)
z<-data(mtcars)
z
z<-as.data.frame(mtcars)
View(z)
View(z)
View(z)
View(z)
save.image("~/Dropbox/Coursera/Regression/project/set1.RData")
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit<-lm(y~x)
fit
summary(fit)
fit$sigma
sqr(.05296)
(.05296)^2
sqrt(.05296)
View(mtcars)
fit2<-lm(mpg~wt, data=mtcars)
summary(fit2)
avg(mtcars$wt)
average(mtcars$wt)
mean(mtcars$wt)
sumCoef<-summary(fit2)$coefficients
sumCoef[2,1]+c(-1,1)*qt(.95, df=fit$df)*sumCoef[2,2]
sumCoef[2,1]+c(-1,1)*qt(.975, df=fit$df)*sumCoef[2,2]
?mtcars
?predict
predict(fit2,wt=3)
nwt<-3.0
predict(fit2,nwt)
predict(fit2,as.data.frame(nwt))
nwtf<-data.frame(nwt)
View(nwtf)
View(nwtf)
wt<-3.0
nwtf<-data.frame(wt)
predict(fit2,as.data.frame(wt))
sumCoef<-summary(fit2)$coefficients
sumCoef[1,1]+c(-1,1)*qt(.975, df=fit$df)*sumCoef[1,2]
sumCoef<-summary(fit2)$coefficients
sumCoef[2,1]+c(-1,1)*qt(.975, df=fit$df)*sumCoef[2,2]
summary(fit2)
1.8776/.5591
, destfile="./data/ravensData.rda",method="curl")
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda", destfile="./data/ravensData.rda",method="curl")
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda", destfile="./data/ravensData.rda")
load("./data/ravensData.rda")
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda", destfile="./data/ravensData.rda")
load("~/Dropbox/Coursera/Regression/Notes/ravensData.rda")
head(ravensData)
logRegRavens <- glm(ravensData$ravenWinNum ~ ravensData$ravenScore,family="binomial")
summary(logRegRavens)
plot(ravensData$ravenScore,logRegRavens$fitted,pch=19,
col="blue",xlab="Score",ylab="Prob Ravens Win")
exp(logRegRavens$coeff)
exp(confint(logRegRavens))
anova(logRegRavens,test="Chisq")
load("~/Dropbox/Coursera/Regression/Notes/gaData.rda")
plot(gaData$julian,gaData$visits,pch=19,col="darkgrey",xlab="Julian",ylab="Visits")
gaData$julian <- julian(gaData$date)
head(gaData)
plot(gaData$julian,gaData$visits,pch=19,col="darkgrey",xlab="Julian",ylab="Visits")
glm1 <- glm(gaData$visits ~ gaData$julian,family="poisson")
abline(lm1,col="red",lwd=3); lines(gaData$julian,glm1$fitted,col="blue",lwd=3)
plot(gaData$julian,gaData$visits,pch=19,col="darkgrey",xlab="Julian",ylab="Visits")
lm1 <- lm(gaData$visits ~ gaData$julian)
abline(lm1,col="red",lwd=3)
# Poison
plot(gaData$julian,gaData$visits,pch=19,col="darkgrey",xlab="Julian",ylab="Visits")
glm1 <- glm(gaData$visits ~ gaData$julian,family="poisson")
abline(lm1,col="red",lwd=3); lines(gaData$julian,glm1$fitted,col="blue",lwd=3)
plot(glm1$fitted,glm1$residuals,pch=19,col="grey",ylab="Residuals",xlab="Fitted")
confint(glm1)
confint.agnostic(glm1)
glm2 <- glm(gaData$simplystats ~ julian(gaData$date),offset=log(visits+1),
family="poisson",data=gaData)
plot(julian(gaData$date),glm2$fitted,col="blue",pch=19,xlab="Date",ylab="Fitted Counts")
points(julian(gaData$date),glm1$fitted,col="red",pch=19)
#
glm2 <- glm(gaData$simplystats ~ julian(gaData$date),offset=log(visits+1),
family="poisson",data=gaData)
plot(julian(gaData$date),gaData$simplystats/(gaData$visits+1),col="grey",xlab="Date",
ylab="Fitted Rates",pch=19)
lines(julian(gaData$date),glm2$fitted/(gaData$visits+1),col="blue",lwd=3)
library(MASS)
data("shuttle")
head(shuttle)
m1<-glm(as.factor(use)~as.factor(wind), data=shuttle, family=binomial)
summary(m1)
summary(as.factor(use))
summary(use)
summary(as.factor(shuttle$use))
head(shuttle)
m2<-glm(as.factor(use)~as.factor(wind)+as.factor(magn), data=shuttle, family=binomial)
summary(m2)
data("InsectSprays")
head(InsectSprays)
m3<-glm(count~as.factor(spray), data=InsectSprays, family=poison)
m3<-glm(count~as.factor(spray), data=InsectSprays, family=poisson)
summary(m3)
1/.05588
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
dataextract4 <- read.csv("/media/home/19ERICKC/dataextract4.csv")
View(dataextract4)
cell <- read.csv("/media/home/19ERICKC/dataextract4.csv")
View(cell)
adv<-subset(cell, type=="ADVD")
by(adv$total.data, adv$model, summary)
boxplot(adv$total.data, na.rm=TRUE)
hist(cell$total.data, na.rm=TRUE)
hist(cell$total.data, na.rm=TRUE, breaks=20)
hist(cell$total.data, breaks=20)
hist(cell$total.data, breaks=20)
hist(cell$total.data, breaks=30)
plot(cell$total.data, breaks=30)
hist(cell$total.data, breaks=30)
hist(adv$total.data, breaks=30)
hist(cell$total.sms, breaks=20)
hist(cell$sms.total, breaks=20)
summary(cell$sms.total)
hist(adv$sms.total)
summary(adv$sms.total)
hist(ff$DIFF, xlab="Difference Between Projected and Actual", prob=TRUE)            # prob=TRUE for probabilities not counts
load("~/Desktop/FF Analysis.csv")
FF.Analysis <- read.csv("~/Desktop/FF Analysis.csv")
View(FF.Analysis)
ff<-FF.Analysis
hist(ff$DIFF, xlab="Difference Between Projected and Actual", prob=TRUE)            # prob=TRUE for probabilities not counts
lines(density(ff$DIFF))             # add a density estimate with defaults
lines(density(ff$DIFF, adjust=2), lty="dotted")   # add another "smoother" density
tapply(ff$DIFF, ff$WL, summary)
reg1 <- lm(ff$Proj~ff$Act)
plot(ff$Proj, ff$Act, col=ff$WL, xlab="Projected Score", ylab="Actual Score")
par(cex=.8)
abline(reg1)
legend('topright', legend = levels(ff$WL), col = 1:3, cex = 0.8, pch = 1)
summary(reg1)
example(lm)
# Input tweets for the 4 teams with an additinal tag of FIFA
library(twitteR)
install.packages("twitteR")
library(twitteR)
install.packages("twitteR")
install.packages("rjson")
install.packages("~/Desktop/rjson_0.2.15.tar.gz", repos = NULL, type = "source")
install.packages("twitteR")
install.packages("rjson")
install.packages("RJSONIO")
install.packages("twitteR")
ver
?version
R.version()
R.Version()
R.Version()
library(nlme)
library(lattice)
xyplot(weight~Time | diet, BodyWeight)
str(BodyWeight)
xyplot(weight~Time | Diet, BodyWeight)
?lattice
#
library(dataets)
library(datasets)
data(airquality)
install.packages(ggplot2)
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
qplot(Wind, Ozone, data=airquality, facets = .~factor(Month))
qplot(Wind, Ozone, data=airquality, facets = .~as.factor(Month))
qplot(Wind, Ozone, data=airquality, facets = . ~ factor(Month))
str(airquality)
airquality=transform(airquality, Month=factor(Month))
qplot(Wind, Ozone, data=airquality, facets = . ~ Month)
qplot(votes, rating, data=moviews)
qplot(votes, rating, data=movies)
qplot(votes, rating, data=movies, smooth="loess")
qplot(votes, rating, data=movies) + geom_smooth()
install.packages(ggplot2)
install.packages("ggplot2")
library("ggplot2")
myfun<-function(xvar) {
1/(1+exp(-xvar+10))
}
qplot(c(0,20), fun=myfun, stat="function", geom="line")
myfun2<-function(xvar) {
x^2-5x+100
}
qplot(c(0,20), fun=myfun2, stat="function", geom="line")
myfun2<-function(xvar) {
xvar^2-5xvar+100
}
qplot(c(0,20), fun=myfun2, stat="function", geom="line")
myfun2<-function(xvar) {
xvar^2-5xvar+100
myfun2<-function(xvar) {
5xvar+100
}
qplot(c(0,20), fun=myfun2, stat="function", geom="line")
myfun2<-function(xvar) {
5xvar+100
myfun2<-function(xvar) {
5x+100
myfun2<-function(xvar) {
5exp(xvar)+100
myfun2<-function(xvar) {
5(xvar)+100
}
qplot(c(0,20), fun=myfun2, stat="function", geom="line")
?function
q
?fun
myfun2<-function(xvar) {
1/(1+exp(-xvar+10))
}
qplot(c(0,20), fun=myfun2, stat="function", geom="line")
myfun2<-function(xvar) {
1/(exp(-xvar+10))
}
qplot(c(0,20), fun=myfun2, stat="function", geom="line")
myfun2<-function(xvar) {
1/((-xvar+10))
}
qplot(c(0,20), fun=myfun2, stat="function", geom="line")
myfun2<-function(xvar) {
1/((-xvar(exp(2))+10))
}
qplot(c(0,20), fun=myfun2, stat="function", geom="line")
myfun2<-function(xvar) {
1/((-xvar^2)+10)
}
qplot(c(0,20), fun=myfun2, stat="function", geom="line")
myfun3<-function(xvar) {
((-xvar^2)+10)
}
qplot(c(0,20), fun=myfun3, stat="function", geom="line")
myfun3<-function(xvar) {
((xvar^2)+10)
}
qplot(c(0,20), fun=myfun3, stat="function", geom="line")
myfun3<-function(xvar) {
((xvar^3)+10)
}
qplot(c(0,20), fun=myfun3, stat="function", geom="line")
myfun3<-function(xvar) {
((xvar^3)+10)
}
qplot(c(0,200), fun=myfun3, stat="function", geom="line")
myfun3<-function(xvar) {
((xvar^3)+10)
}
qplot(c(0,20), fun=myfun3, stat="function", geom="line")
myfun3<-function(xvar) {
((xvar^3)-(xvar^2)+10)
}
qplot(c(0,20), fun=myfun3, stat="function", geom="line")
myfun3<-function(xvar) {
(I(xvar^3)-I(xvar^2)+10)
}
qplot(c(0,20), fun=myfun3, stat="function", geom="line")
myfun3<-function(xvar) {
((xvar*3)-(xvar*2)+10)
}
qplot(c(0,20), fun=myfun3, stat="function", geom="line")
myfun3<-function(xvar) {
((xvar*(exp(3))-(xvar*2)+10)
}
myfun3<-function(xvar) {
(xvar^2)+10)
}
qplot(c(0,20), fun=myfun3, stat="function", geom="line")
myfun3<-function(xvar) {
((xvar^2)+10)
}
qplot(c(0,20), fun=myfun3, stat="function", geom="line")
myfun3<-function(xvar) {
((xvar^3)-(xvar^2)+10)
}
qplot(c(0,20), fun=myfun3, stat="function", geom="line")
myfun4<-function(xvar) {
(xvar^4)
}
qplot(c(0,20), fun=myfun3, stat="function", geom="line")
myfun4<-function(xvar) {
log(xvar^4)
}
qplot(c(0,20), fun=myfun3, stat="function", geom="line")
myfun4<-function(xvar) {
(xvar^4)
}
qplot(c(0,20), fun=myfun3, stat="function", geom="line")
install.packages("ggplot2")
library(ggplot2)
NEI <- readRDS("summarySCC_PM25.rds")
setwd("~/Documents/Coursera/Exploratory Data Analysis/exploredata2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI$Pollutant<-as.factor(NEI$Pollutant)
NEI$type<-as.factor(NEI$type)
NEI$year<-as.factor(NEI$year)
baltcity<-subset(NEI, fips=="24510")
str(baltcity)
baltcityyearsum<-aggregate(Emissions ~ year, data = baltcity, sum)
baltcityyearsum   # Check out the data
barplot(baltcityyearsum$Emissions, names.arg=baltcityyearsum$year, main="Total PM2.5 Emissions in Baltimore City")
g <- ggplot(baltcity, aes(x=as.numeric(year), y=Emissions, fill=Type)) +
geom_bar(stat="identity", width=0.5, position="dodge")
g
View(baltcity)
View(baltcity)
g <- ggplot(baltcity, aes(x=as.numeric(year), y=Emissions, fill=type)) +
geom_bar(stat="identity", width=0.5, position="dodge")
g
labs(xlab=c("2008", "2005", "2002", "1999"))
g
g <- ggplot(baltcity, aes(x=as.numeric(year), y=Emissions, fill=type)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab=c("2008", "2005", "2002", "1999"))
g
g <- ggplot(baltcity, aes(x=as.numeric(year), y=Emissions, fill=type)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab=year)
g <- ggplot(baltcity, aes(x=as.numeric(year), y=Emissions, fill=type)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab=baltcity$year)
g
g <- ggplot(baltcity, aes(x=as.numeric(year), y=Emissions, fill=type)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab="year")
g
g <- ggplot(baltcity, aes(x=as.numeric(year), y=Emissions, fill=type)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab="year", title="Emission in Baltimore")
g
g <- ggplot(baltcity, aes(x=as.numeric(year), y=Emissions, fill=type)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab="year", title="Emission in Baltimore by Type & Year")
g
g <- ggplot(baltcity, aes(x=year, y=Emissions, fill=type)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab="year", title="Emission in Baltimore by Type & Year")
g
Q4 <- ggplot(subset(baltcity, type=="ON-ROAD"), aes(x=year, y=Emissions)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab="year", title="Emission in Baltimore by Type & Year")
Q4
Q4 <- ggplot(subset(baltcity, type=="ON-ROAD"), aes(x=year, y=Emissions)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab="year", title="Motor Vehicle Emissions in Baltimore")
Q4
View(SCC)
View(SCC)
NEISCC <- merge(NEI,SCC,by.x="SCC",by.y="SCC",all=TRUE)
setwd("~/Documents/Coursera/Exploratory Data Analysis/exploredata2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI$Pollutant<-as.factor(NEI$Pollutant)
NEI$type<-as.factor(NEI$type)
NEI$year<-as.factor(NEI$year)
SCC$type<-as.factor(SCC$type)
head(SCC)
str(SCC)
SCC <- readRDS("Source_Classification_Code.rds")
str(SCC)
?subset
View(SCC)
View(SCC)
?grep
SCC_Coal<-grepl("coal", SCC, ignore.case = TRUE, perl = FALSE, fixed = FALSE, useBytes = FALSE)
SCC_Coal<-grepl("coal", SCC$Short.Name, ignore.case = TRUE, perl = FALSE, fixed = FALSE, useBytes = FALSE)
SCC$Coal<-grepl("coal", SCC$Short.Name, ignore.case = TRUE, perl = FALSE, fixed = FALSE, useBytes = FALSE)
SCC_Coal<-subset(SCC, SCC$Coal=="TRUE")
SCC_Coal<-subset(SCC, SCC$Coal==TRUE)
SCC_Coal<-subset(SCC, SCC$Coal=TRUE)
View(SCC)
View(SCC)
SCC$Coal<-grepl("coal", SCC$EI.Sector, ignore.case = TRUE, perl = FALSE, fixed = FALSE, useBytes = FALSE)
SCC_Coal<-subset(SCC, SCC$Coal=TRUE)
SCC_Coal<-subset(SCC, SCC$Coal is TRUE)
SCC_Coal<-subset(SCC, Coal==TRUE)
Q4 <- ggplot(SCC_Coal, aes(x=year, y=Emissions)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab="year", title="Coal Combustion Related Emissions")
Q4
Q4
Q4 <- ggplot(SCC_Coal, aes(x=year, y=Emissions)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab=year, title="Coal Combustion Related Emissions")
View(SCC_Coal)
View(SCC_Coal)
NEI_Coal<-subset(NEI, SCC %in% SCC_Coal$SCC)
Q4 <- ggplot(NEI_Coal, aes(x=year, y=Emissions)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab=year, title="Coal Combustion Related Emissions")
Q4 <- ggplot(NEI_Coal, aes(x=year, y=Emissions)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab="year", title="Coal Combustion Related Emissions")
Q4
View(SCC)
View(SCC)
SCC$MV<-grepl("vehicle", SCC$EI.Sector, ignore.case = TRUE, perl = FALSE, fixed = FALSE, useBytes = FALSE)
SCC_MV<-subset(SCC, MV==TRUE)
View(SCC_MV)
View(SCC_MV)
Q5 <- ggplot(subset(baltcity, type=="ON-ROAD"), aes(x=year, y=Emissions)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab="year", title="On-road Motor Vehicle Emissions in Baltimore")
Q5
View(NEI)
View(NEI)
baltcity<-subset(NEI, fips=="24510")
Q5 <- ggplot(subset(baltcity, type=="ON-ROAD"), aes(x=year, y=Emissions)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab="year", title="On-road Motor Vehicle Emissions in Baltimore")
Q5
View(baltcity)
View(baltcity)
MV_counties<-subset(NEI, fips=="24510"|fips=="06037")
MV_compare<-subset(MV_counties, type=="ON-ROAD")
Q6 <- ggplot(MV_compare, aes(x=year, y=Emissions, fill=fips)) +
geom_bar(stat="identity", width=0.5, position="dodge", ) +
labs(xlab="year", title="Motor Vehicle Emissions in Baltimore City 24510 vs Los Angeles 06037 Counties")
Q6
?table
yearsum<-aggregate(Emissions ~ year, data = NEI, sum)
yearsum    # Check out the data
barplot(yearsum$Emissions, names.arg=yearsum$year, main="Total PM2.5 Emissions in US")
example(barplot)
setwd("~/Documents/Coursera/Exploratory Data Analysis/exploredata2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#
str(NEI)
str(SCC)
head(SCC)
summary(NEI)
#
#
NEI$Pollutant<-as.factor(NEI$Pollutant)
NEI$type<-as.factor(NEI$type)
NEI$year<-as.factor(NEI$year)
#
hist(NEI$Emissions)
hist(log(subset(NEI$Emissions, NEI$year=="1999")))
barplot(NEI$Emissions, xlab=NEI$year)
